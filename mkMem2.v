//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// On Thu Oct 26 13:59:29 IST 2023
//
//
// Ports:
// Name                         I/O  size props
// RDY_put                        O     1
// get                            O   128
// RDY_get                        O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// put_datas                      I   128
// EN_put                         I     1
// EN_get                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMem2(CLK,
	      RST_N,

	      put_datas,
	      EN_put,
	      RDY_put,

	      EN_get,
	      get,
	      RDY_get);
  input  CLK;
  input  RST_N;

  // action method put
  input  [127 : 0] put_datas;
  input  EN_put;
  output RDY_put;

  // actionvalue method get
  input  EN_get;
  output [127 : 0] get;
  output RDY_get;

  // signals for module outputs
  wire [127 : 0] get;
  wire RDY_get, RDY_put;

  // register mem_0_rCache
  reg [16 : 0] mem_0_rCache;
  wire [16 : 0] mem_0_rCache$D_IN;
  wire mem_0_rCache$EN;

  // register mem_0_rRdPtr
  reg [7 : 0] mem_0_rRdPtr;
  wire [7 : 0] mem_0_rRdPtr$D_IN;
  wire mem_0_rRdPtr$EN;

  // register mem_0_rWrPtr
  reg [7 : 0] mem_0_rWrPtr;
  wire [7 : 0] mem_0_rWrPtr$D_IN;
  wire mem_0_rWrPtr$EN;

  // register mem_10_rCache
  reg [16 : 0] mem_10_rCache;
  wire [16 : 0] mem_10_rCache$D_IN;
  wire mem_10_rCache$EN;

  // register mem_10_rRdPtr
  reg [7 : 0] mem_10_rRdPtr;
  wire [7 : 0] mem_10_rRdPtr$D_IN;
  wire mem_10_rRdPtr$EN;

  // register mem_10_rWrPtr
  reg [7 : 0] mem_10_rWrPtr;
  wire [7 : 0] mem_10_rWrPtr$D_IN;
  wire mem_10_rWrPtr$EN;

  // register mem_11_rCache
  reg [16 : 0] mem_11_rCache;
  wire [16 : 0] mem_11_rCache$D_IN;
  wire mem_11_rCache$EN;

  // register mem_11_rRdPtr
  reg [7 : 0] mem_11_rRdPtr;
  wire [7 : 0] mem_11_rRdPtr$D_IN;
  wire mem_11_rRdPtr$EN;

  // register mem_11_rWrPtr
  reg [7 : 0] mem_11_rWrPtr;
  wire [7 : 0] mem_11_rWrPtr$D_IN;
  wire mem_11_rWrPtr$EN;

  // register mem_12_rCache
  reg [16 : 0] mem_12_rCache;
  wire [16 : 0] mem_12_rCache$D_IN;
  wire mem_12_rCache$EN;

  // register mem_12_rRdPtr
  reg [7 : 0] mem_12_rRdPtr;
  wire [7 : 0] mem_12_rRdPtr$D_IN;
  wire mem_12_rRdPtr$EN;

  // register mem_12_rWrPtr
  reg [7 : 0] mem_12_rWrPtr;
  wire [7 : 0] mem_12_rWrPtr$D_IN;
  wire mem_12_rWrPtr$EN;

  // register mem_13_rCache
  reg [16 : 0] mem_13_rCache;
  wire [16 : 0] mem_13_rCache$D_IN;
  wire mem_13_rCache$EN;

  // register mem_13_rRdPtr
  reg [7 : 0] mem_13_rRdPtr;
  wire [7 : 0] mem_13_rRdPtr$D_IN;
  wire mem_13_rRdPtr$EN;

  // register mem_13_rWrPtr
  reg [7 : 0] mem_13_rWrPtr;
  wire [7 : 0] mem_13_rWrPtr$D_IN;
  wire mem_13_rWrPtr$EN;

  // register mem_14_rCache
  reg [16 : 0] mem_14_rCache;
  wire [16 : 0] mem_14_rCache$D_IN;
  wire mem_14_rCache$EN;

  // register mem_14_rRdPtr
  reg [7 : 0] mem_14_rRdPtr;
  wire [7 : 0] mem_14_rRdPtr$D_IN;
  wire mem_14_rRdPtr$EN;

  // register mem_14_rWrPtr
  reg [7 : 0] mem_14_rWrPtr;
  wire [7 : 0] mem_14_rWrPtr$D_IN;
  wire mem_14_rWrPtr$EN;

  // register mem_15_rCache
  reg [16 : 0] mem_15_rCache;
  wire [16 : 0] mem_15_rCache$D_IN;
  wire mem_15_rCache$EN;

  // register mem_15_rRdPtr
  reg [7 : 0] mem_15_rRdPtr;
  wire [7 : 0] mem_15_rRdPtr$D_IN;
  wire mem_15_rRdPtr$EN;

  // register mem_15_rWrPtr
  reg [7 : 0] mem_15_rWrPtr;
  wire [7 : 0] mem_15_rWrPtr$D_IN;
  wire mem_15_rWrPtr$EN;

  // register mem_1_rCache
  reg [16 : 0] mem_1_rCache;
  wire [16 : 0] mem_1_rCache$D_IN;
  wire mem_1_rCache$EN;

  // register mem_1_rRdPtr
  reg [7 : 0] mem_1_rRdPtr;
  wire [7 : 0] mem_1_rRdPtr$D_IN;
  wire mem_1_rRdPtr$EN;

  // register mem_1_rWrPtr
  reg [7 : 0] mem_1_rWrPtr;
  wire [7 : 0] mem_1_rWrPtr$D_IN;
  wire mem_1_rWrPtr$EN;

  // register mem_2_rCache
  reg [16 : 0] mem_2_rCache;
  wire [16 : 0] mem_2_rCache$D_IN;
  wire mem_2_rCache$EN;

  // register mem_2_rRdPtr
  reg [7 : 0] mem_2_rRdPtr;
  wire [7 : 0] mem_2_rRdPtr$D_IN;
  wire mem_2_rRdPtr$EN;

  // register mem_2_rWrPtr
  reg [7 : 0] mem_2_rWrPtr;
  wire [7 : 0] mem_2_rWrPtr$D_IN;
  wire mem_2_rWrPtr$EN;

  // register mem_3_rCache
  reg [16 : 0] mem_3_rCache;
  wire [16 : 0] mem_3_rCache$D_IN;
  wire mem_3_rCache$EN;

  // register mem_3_rRdPtr
  reg [7 : 0] mem_3_rRdPtr;
  wire [7 : 0] mem_3_rRdPtr$D_IN;
  wire mem_3_rRdPtr$EN;

  // register mem_3_rWrPtr
  reg [7 : 0] mem_3_rWrPtr;
  wire [7 : 0] mem_3_rWrPtr$D_IN;
  wire mem_3_rWrPtr$EN;

  // register mem_4_rCache
  reg [16 : 0] mem_4_rCache;
  wire [16 : 0] mem_4_rCache$D_IN;
  wire mem_4_rCache$EN;

  // register mem_4_rRdPtr
  reg [7 : 0] mem_4_rRdPtr;
  wire [7 : 0] mem_4_rRdPtr$D_IN;
  wire mem_4_rRdPtr$EN;

  // register mem_4_rWrPtr
  reg [7 : 0] mem_4_rWrPtr;
  wire [7 : 0] mem_4_rWrPtr$D_IN;
  wire mem_4_rWrPtr$EN;

  // register mem_5_rCache
  reg [16 : 0] mem_5_rCache;
  wire [16 : 0] mem_5_rCache$D_IN;
  wire mem_5_rCache$EN;

  // register mem_5_rRdPtr
  reg [7 : 0] mem_5_rRdPtr;
  wire [7 : 0] mem_5_rRdPtr$D_IN;
  wire mem_5_rRdPtr$EN;

  // register mem_5_rWrPtr
  reg [7 : 0] mem_5_rWrPtr;
  wire [7 : 0] mem_5_rWrPtr$D_IN;
  wire mem_5_rWrPtr$EN;

  // register mem_6_rCache
  reg [16 : 0] mem_6_rCache;
  wire [16 : 0] mem_6_rCache$D_IN;
  wire mem_6_rCache$EN;

  // register mem_6_rRdPtr
  reg [7 : 0] mem_6_rRdPtr;
  wire [7 : 0] mem_6_rRdPtr$D_IN;
  wire mem_6_rRdPtr$EN;

  // register mem_6_rWrPtr
  reg [7 : 0] mem_6_rWrPtr;
  wire [7 : 0] mem_6_rWrPtr$D_IN;
  wire mem_6_rWrPtr$EN;

  // register mem_7_rCache
  reg [16 : 0] mem_7_rCache;
  wire [16 : 0] mem_7_rCache$D_IN;
  wire mem_7_rCache$EN;

  // register mem_7_rRdPtr
  reg [7 : 0] mem_7_rRdPtr;
  wire [7 : 0] mem_7_rRdPtr$D_IN;
  wire mem_7_rRdPtr$EN;

  // register mem_7_rWrPtr
  reg [7 : 0] mem_7_rWrPtr;
  wire [7 : 0] mem_7_rWrPtr$D_IN;
  wire mem_7_rWrPtr$EN;

  // register mem_8_rCache
  reg [16 : 0] mem_8_rCache;
  wire [16 : 0] mem_8_rCache$D_IN;
  wire mem_8_rCache$EN;

  // register mem_8_rRdPtr
  reg [7 : 0] mem_8_rRdPtr;
  wire [7 : 0] mem_8_rRdPtr$D_IN;
  wire mem_8_rRdPtr$EN;

  // register mem_8_rWrPtr
  reg [7 : 0] mem_8_rWrPtr;
  wire [7 : 0] mem_8_rWrPtr$D_IN;
  wire mem_8_rWrPtr$EN;

  // register mem_9_rCache
  reg [16 : 0] mem_9_rCache;
  wire [16 : 0] mem_9_rCache$D_IN;
  wire mem_9_rCache$EN;

  // register mem_9_rRdPtr
  reg [7 : 0] mem_9_rRdPtr;
  wire [7 : 0] mem_9_rRdPtr$D_IN;
  wire mem_9_rRdPtr$EN;

  // register mem_9_rWrPtr
  reg [7 : 0] mem_9_rWrPtr;
  wire [7 : 0] mem_9_rWrPtr$D_IN;
  wire mem_9_rWrPtr$EN;

  // ports of submodule mem_0_memory
  wire [7 : 0] mem_0_memory$DIA, mem_0_memory$DIB, mem_0_memory$DOB;
  wire [6 : 0] mem_0_memory$ADDRA, mem_0_memory$ADDRB;
  wire mem_0_memory$ENA, mem_0_memory$ENB, mem_0_memory$WEA, mem_0_memory$WEB;

  // ports of submodule mem_10_memory
  wire [7 : 0] mem_10_memory$DIA, mem_10_memory$DIB, mem_10_memory$DOB;
  wire [6 : 0] mem_10_memory$ADDRA, mem_10_memory$ADDRB;
  wire mem_10_memory$ENA,
       mem_10_memory$ENB,
       mem_10_memory$WEA,
       mem_10_memory$WEB;

  // ports of submodule mem_11_memory
  wire [7 : 0] mem_11_memory$DIA, mem_11_memory$DIB, mem_11_memory$DOB;
  wire [6 : 0] mem_11_memory$ADDRA, mem_11_memory$ADDRB;
  wire mem_11_memory$ENA,
       mem_11_memory$ENB,
       mem_11_memory$WEA,
       mem_11_memory$WEB;

  // ports of submodule mem_12_memory
  wire [7 : 0] mem_12_memory$DIA, mem_12_memory$DIB, mem_12_memory$DOB;
  wire [6 : 0] mem_12_memory$ADDRA, mem_12_memory$ADDRB;
  wire mem_12_memory$ENA,
       mem_12_memory$ENB,
       mem_12_memory$WEA,
       mem_12_memory$WEB;

  // ports of submodule mem_13_memory
  wire [7 : 0] mem_13_memory$DIA, mem_13_memory$DIB, mem_13_memory$DOB;
  wire [6 : 0] mem_13_memory$ADDRA, mem_13_memory$ADDRB;
  wire mem_13_memory$ENA,
       mem_13_memory$ENB,
       mem_13_memory$WEA,
       mem_13_memory$WEB;

  // ports of submodule mem_14_memory
  wire [7 : 0] mem_14_memory$DIA, mem_14_memory$DIB, mem_14_memory$DOB;
  wire [6 : 0] mem_14_memory$ADDRA, mem_14_memory$ADDRB;
  wire mem_14_memory$ENA,
       mem_14_memory$ENB,
       mem_14_memory$WEA,
       mem_14_memory$WEB;

  // ports of submodule mem_15_memory
  wire [7 : 0] mem_15_memory$DIA, mem_15_memory$DIB, mem_15_memory$DOB;
  wire [6 : 0] mem_15_memory$ADDRA, mem_15_memory$ADDRB;
  wire mem_15_memory$ENA,
       mem_15_memory$ENB,
       mem_15_memory$WEA,
       mem_15_memory$WEB;

  // ports of submodule mem_1_memory
  wire [7 : 0] mem_1_memory$DIA, mem_1_memory$DIB, mem_1_memory$DOB;
  wire [6 : 0] mem_1_memory$ADDRA, mem_1_memory$ADDRB;
  wire mem_1_memory$ENA, mem_1_memory$ENB, mem_1_memory$WEA, mem_1_memory$WEB;

  // ports of submodule mem_2_memory
  wire [7 : 0] mem_2_memory$DIA, mem_2_memory$DIB, mem_2_memory$DOB;
  wire [6 : 0] mem_2_memory$ADDRA, mem_2_memory$ADDRB;
  wire mem_2_memory$ENA, mem_2_memory$ENB, mem_2_memory$WEA, mem_2_memory$WEB;

  // ports of submodule mem_3_memory
  wire [7 : 0] mem_3_memory$DIA, mem_3_memory$DIB, mem_3_memory$DOB;
  wire [6 : 0] mem_3_memory$ADDRA, mem_3_memory$ADDRB;
  wire mem_3_memory$ENA, mem_3_memory$ENB, mem_3_memory$WEA, mem_3_memory$WEB;

  // ports of submodule mem_4_memory
  wire [7 : 0] mem_4_memory$DIA, mem_4_memory$DIB, mem_4_memory$DOB;
  wire [6 : 0] mem_4_memory$ADDRA, mem_4_memory$ADDRB;
  wire mem_4_memory$ENA, mem_4_memory$ENB, mem_4_memory$WEA, mem_4_memory$WEB;

  // ports of submodule mem_5_memory
  wire [7 : 0] mem_5_memory$DIA, mem_5_memory$DIB, mem_5_memory$DOB;
  wire [6 : 0] mem_5_memory$ADDRA, mem_5_memory$ADDRB;
  wire mem_5_memory$ENA, mem_5_memory$ENB, mem_5_memory$WEA, mem_5_memory$WEB;

  // ports of submodule mem_6_memory
  wire [7 : 0] mem_6_memory$DIA, mem_6_memory$DIB, mem_6_memory$DOB;
  wire [6 : 0] mem_6_memory$ADDRA, mem_6_memory$ADDRB;
  wire mem_6_memory$ENA, mem_6_memory$ENB, mem_6_memory$WEA, mem_6_memory$WEB;

  // ports of submodule mem_7_memory
  wire [7 : 0] mem_7_memory$DIA, mem_7_memory$DIB, mem_7_memory$DOB;
  wire [6 : 0] mem_7_memory$ADDRA, mem_7_memory$ADDRB;
  wire mem_7_memory$ENA, mem_7_memory$ENB, mem_7_memory$WEA, mem_7_memory$WEB;

  // ports of submodule mem_8_memory
  wire [7 : 0] mem_8_memory$DIA, mem_8_memory$DIB, mem_8_memory$DOB;
  wire [6 : 0] mem_8_memory$ADDRA, mem_8_memory$ADDRB;
  wire mem_8_memory$ENA, mem_8_memory$ENB, mem_8_memory$WEA, mem_8_memory$WEB;

  // ports of submodule mem_9_memory
  wire [7 : 0] mem_9_memory$DIA, mem_9_memory$DIB, mem_9_memory$DOB;
  wire [6 : 0] mem_9_memory$ADDRA, mem_9_memory$ADDRB;
  wire mem_9_memory$ENA, mem_9_memory$ENB, mem_9_memory$WEA, mem_9_memory$WEB;

  // remaining internal signals
  wire [7 : 0] x3__h10760,
	       x3__h11677,
	       x3__h12594,
	       x3__h13511,
	       x3__h14428,
	       x3__h1590,
	       x3__h2507,
	       x3__h3424,
	       x3__h4341,
	       x3__h5258,
	       x3__h6175,
	       x3__h671,
	       x3__h7092,
	       x3__h8009,
	       x3__h8926,
	       x3__h9843,
	       x__h10013,
	       x__h10841,
	       x__h10930,
	       x__h11758,
	       x__h11847,
	       x__h12675,
	       x__h12764,
	       x__h13592,
	       x__h13681,
	       x__h14509,
	       x__h14598,
	       x__h1671,
	       x__h1760,
	       x__h2588,
	       x__h2677,
	       x__h3505,
	       x__h3594,
	       x__h4422,
	       x__h4511,
	       x__h5339,
	       x__h5428,
	       x__h6256,
	       x__h6345,
	       x__h7173,
	       x__h7262,
	       x__h754,
	       x__h8090,
	       x__h8179,
	       x__h843,
	       x__h9007,
	       x__h9096,
	       x__h9924,
	       x_wget__h10647,
	       x_wget__h11564,
	       x_wget__h12481,
	       x_wget__h13398,
	       x_wget__h14315,
	       x_wget__h1477,
	       x_wget__h2394,
	       x_wget__h3311,
	       x_wget__h4228,
	       x_wget__h5145,
	       x_wget__h554,
	       x_wget__h6062,
	       x_wget__h6979,
	       x_wget__h7896,
	       x_wget__h8813,
	       x_wget__h9730;
  wire NOT_mem_10_rRdPtr_read__17_EQ_mem_10_rWrPtr_re_ETC___d650,
       NOT_mem_10_rRdPtr_read__17_PLUS_64_27_EQ_mem_1_ETC___d549,
       NOT_mem_12_rRdPtr_read__77_EQ_mem_12_rWrPtr_re_ETC___d648,
       NOT_mem_12_rRdPtr_read__77_PLUS_64_33_EQ_mem_1_ETC___d547,
       NOT_mem_14_rRdPtr_read__37_PLUS_64_39_EQ_mem_1_ETC___d545,
       NOT_mem_2_rRdPtr_read__7_EQ_mem_2_rWrPtr_read__ETC___d658,
       NOT_mem_2_rRdPtr_read__7_PLUS_64_03_EQ_mem_2_r_ETC___d557,
       NOT_mem_4_rRdPtr_read__37_EQ_mem_4_rWrPtr_read_ETC___d656,
       NOT_mem_4_rRdPtr_read__37_PLUS_64_09_EQ_mem_4__ETC___d555,
       NOT_mem_6_rRdPtr_read__97_EQ_mem_6_rWrPtr_read_ETC___d654,
       NOT_mem_6_rRdPtr_read__97_PLUS_64_15_EQ_mem_6__ETC___d553,
       NOT_mem_8_rRdPtr_read__57_EQ_mem_8_rWrPtr_read_ETC___d652,
       NOT_mem_8_rRdPtr_read__57_PLUS_64_21_EQ_mem_8__ETC___d551;

  // action method put
  assign RDY_put =
	     mem_0_rRdPtr + 8'd64 != mem_0_rWrPtr &&
	     mem_1_rRdPtr + 8'd64 != mem_1_rWrPtr &&
	     NOT_mem_2_rRdPtr_read__7_PLUS_64_03_EQ_mem_2_r_ETC___d557 ;

  // actionvalue method get
  assign get =
	     { x_wget__h14315,
	       x_wget__h13398,
	       x_wget__h12481,
	       x_wget__h11564,
	       x_wget__h10647,
	       x_wget__h9730,
	       x_wget__h8813,
	       x_wget__h7896,
	       x_wget__h6979,
	       x_wget__h6062,
	       x_wget__h5145,
	       x_wget__h4228,
	       x_wget__h3311,
	       x_wget__h2394,
	       x_wget__h1477,
	       x_wget__h554 } ;
  assign RDY_get =
	     mem_0_rRdPtr != mem_0_rWrPtr && mem_1_rRdPtr != mem_1_rWrPtr &&
	     NOT_mem_2_rRdPtr_read__7_EQ_mem_2_rWrPtr_read__ETC___d658 ;

  // submodule mem_0_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_0_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_0_memory$ADDRA),
					 .ADDRB(mem_0_memory$ADDRB),
					 .DIA(mem_0_memory$DIA),
					 .DIB(mem_0_memory$DIB),
					 .WEA(mem_0_memory$WEA),
					 .WEB(mem_0_memory$WEB),
					 .ENA(mem_0_memory$ENA),
					 .ENB(mem_0_memory$ENB),
					 .DOA(),
					 .DOB(mem_0_memory$DOB));

  // submodule mem_10_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_10_memory(.CLKA(CLK),
					  .CLKB(CLK),
					  .ADDRA(mem_10_memory$ADDRA),
					  .ADDRB(mem_10_memory$ADDRB),
					  .DIA(mem_10_memory$DIA),
					  .DIB(mem_10_memory$DIB),
					  .WEA(mem_10_memory$WEA),
					  .WEB(mem_10_memory$WEB),
					  .ENA(mem_10_memory$ENA),
					  .ENB(mem_10_memory$ENB),
					  .DOA(),
					  .DOB(mem_10_memory$DOB));

  // submodule mem_11_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_11_memory(.CLKA(CLK),
					  .CLKB(CLK),
					  .ADDRA(mem_11_memory$ADDRA),
					  .ADDRB(mem_11_memory$ADDRB),
					  .DIA(mem_11_memory$DIA),
					  .DIB(mem_11_memory$DIB),
					  .WEA(mem_11_memory$WEA),
					  .WEB(mem_11_memory$WEB),
					  .ENA(mem_11_memory$ENA),
					  .ENB(mem_11_memory$ENB),
					  .DOA(),
					  .DOB(mem_11_memory$DOB));

  // submodule mem_12_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_12_memory(.CLKA(CLK),
					  .CLKB(CLK),
					  .ADDRA(mem_12_memory$ADDRA),
					  .ADDRB(mem_12_memory$ADDRB),
					  .DIA(mem_12_memory$DIA),
					  .DIB(mem_12_memory$DIB),
					  .WEA(mem_12_memory$WEA),
					  .WEB(mem_12_memory$WEB),
					  .ENA(mem_12_memory$ENA),
					  .ENB(mem_12_memory$ENB),
					  .DOA(),
					  .DOB(mem_12_memory$DOB));

  // submodule mem_13_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_13_memory(.CLKA(CLK),
					  .CLKB(CLK),
					  .ADDRA(mem_13_memory$ADDRA),
					  .ADDRB(mem_13_memory$ADDRB),
					  .DIA(mem_13_memory$DIA),
					  .DIB(mem_13_memory$DIB),
					  .WEA(mem_13_memory$WEA),
					  .WEB(mem_13_memory$WEB),
					  .ENA(mem_13_memory$ENA),
					  .ENB(mem_13_memory$ENB),
					  .DOA(),
					  .DOB(mem_13_memory$DOB));

  // submodule mem_14_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_14_memory(.CLKA(CLK),
					  .CLKB(CLK),
					  .ADDRA(mem_14_memory$ADDRA),
					  .ADDRB(mem_14_memory$ADDRB),
					  .DIA(mem_14_memory$DIA),
					  .DIB(mem_14_memory$DIB),
					  .WEA(mem_14_memory$WEA),
					  .WEB(mem_14_memory$WEB),
					  .ENA(mem_14_memory$ENA),
					  .ENB(mem_14_memory$ENB),
					  .DOA(),
					  .DOB(mem_14_memory$DOB));

  // submodule mem_15_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_15_memory(.CLKA(CLK),
					  .CLKB(CLK),
					  .ADDRA(mem_15_memory$ADDRA),
					  .ADDRB(mem_15_memory$ADDRB),
					  .DIA(mem_15_memory$DIA),
					  .DIB(mem_15_memory$DIB),
					  .WEA(mem_15_memory$WEA),
					  .WEB(mem_15_memory$WEB),
					  .ENA(mem_15_memory$ENA),
					  .ENB(mem_15_memory$ENB),
					  .DOA(),
					  .DOB(mem_15_memory$DOB));

  // submodule mem_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_1_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_1_memory$ADDRA),
					 .ADDRB(mem_1_memory$ADDRB),
					 .DIA(mem_1_memory$DIA),
					 .DIB(mem_1_memory$DIB),
					 .WEA(mem_1_memory$WEA),
					 .WEB(mem_1_memory$WEB),
					 .ENA(mem_1_memory$ENA),
					 .ENB(mem_1_memory$ENB),
					 .DOA(),
					 .DOB(mem_1_memory$DOB));

  // submodule mem_2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_2_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_2_memory$ADDRA),
					 .ADDRB(mem_2_memory$ADDRB),
					 .DIA(mem_2_memory$DIA),
					 .DIB(mem_2_memory$DIB),
					 .WEA(mem_2_memory$WEA),
					 .WEB(mem_2_memory$WEB),
					 .ENA(mem_2_memory$ENA),
					 .ENB(mem_2_memory$ENB),
					 .DOA(),
					 .DOB(mem_2_memory$DOB));

  // submodule mem_3_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_3_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_3_memory$ADDRA),
					 .ADDRB(mem_3_memory$ADDRB),
					 .DIA(mem_3_memory$DIA),
					 .DIB(mem_3_memory$DIB),
					 .WEA(mem_3_memory$WEA),
					 .WEB(mem_3_memory$WEB),
					 .ENA(mem_3_memory$ENA),
					 .ENB(mem_3_memory$ENB),
					 .DOA(),
					 .DOB(mem_3_memory$DOB));

  // submodule mem_4_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_4_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_4_memory$ADDRA),
					 .ADDRB(mem_4_memory$ADDRB),
					 .DIA(mem_4_memory$DIA),
					 .DIB(mem_4_memory$DIB),
					 .WEA(mem_4_memory$WEA),
					 .WEB(mem_4_memory$WEB),
					 .ENA(mem_4_memory$ENA),
					 .ENB(mem_4_memory$ENB),
					 .DOA(),
					 .DOB(mem_4_memory$DOB));

  // submodule mem_5_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_5_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_5_memory$ADDRA),
					 .ADDRB(mem_5_memory$ADDRB),
					 .DIA(mem_5_memory$DIA),
					 .DIB(mem_5_memory$DIB),
					 .WEA(mem_5_memory$WEA),
					 .WEB(mem_5_memory$WEB),
					 .ENA(mem_5_memory$ENA),
					 .ENB(mem_5_memory$ENB),
					 .DOA(),
					 .DOB(mem_5_memory$DOB));

  // submodule mem_6_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_6_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_6_memory$ADDRA),
					 .ADDRB(mem_6_memory$ADDRB),
					 .DIA(mem_6_memory$DIA),
					 .DIB(mem_6_memory$DIB),
					 .WEA(mem_6_memory$WEA),
					 .WEB(mem_6_memory$WEB),
					 .ENA(mem_6_memory$ENA),
					 .ENB(mem_6_memory$ENB),
					 .DOA(),
					 .DOB(mem_6_memory$DOB));

  // submodule mem_7_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_7_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_7_memory$ADDRA),
					 .ADDRB(mem_7_memory$ADDRB),
					 .DIA(mem_7_memory$DIA),
					 .DIB(mem_7_memory$DIB),
					 .WEA(mem_7_memory$WEA),
					 .WEB(mem_7_memory$WEB),
					 .ENA(mem_7_memory$ENA),
					 .ENB(mem_7_memory$ENB),
					 .DOA(),
					 .DOB(mem_7_memory$DOB));

  // submodule mem_8_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_8_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_8_memory$ADDRA),
					 .ADDRB(mem_8_memory$ADDRB),
					 .DIA(mem_8_memory$DIA),
					 .DIB(mem_8_memory$DIB),
					 .WEA(mem_8_memory$WEA),
					 .WEB(mem_8_memory$WEB),
					 .ENA(mem_8_memory$ENA),
					 .ENB(mem_8_memory$ENB),
					 .DOA(),
					 .DOB(mem_8_memory$DOB));

  // submodule mem_9_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd8),
	  .MEMSIZE(8'd128)) mem_9_memory(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(mem_9_memory$ADDRA),
					 .ADDRB(mem_9_memory$ADDRB),
					 .DIA(mem_9_memory$DIA),
					 .DIB(mem_9_memory$DIB),
					 .WEA(mem_9_memory$WEA),
					 .WEB(mem_9_memory$WEB),
					 .ENA(mem_9_memory$ENA),
					 .ENB(mem_9_memory$ENB),
					 .DOA(),
					 .DOB(mem_9_memory$DOB));

  // register mem_0_rCache
  assign mem_0_rCache$D_IN = { 1'd1, mem_0_rWrPtr, x3__h671 } ;
  assign mem_0_rCache$EN = EN_put ;

  // register mem_0_rRdPtr
  assign mem_0_rRdPtr$D_IN = x__h843 ;
  assign mem_0_rRdPtr$EN = EN_get ;

  // register mem_0_rWrPtr
  assign mem_0_rWrPtr$D_IN = x__h754 ;
  assign mem_0_rWrPtr$EN = EN_put ;

  // register mem_10_rCache
  assign mem_10_rCache$D_IN = { 1'd1, mem_10_rWrPtr, x3__h9843 } ;
  assign mem_10_rCache$EN = EN_put ;

  // register mem_10_rRdPtr
  assign mem_10_rRdPtr$D_IN = x__h10013 ;
  assign mem_10_rRdPtr$EN = EN_get ;

  // register mem_10_rWrPtr
  assign mem_10_rWrPtr$D_IN = x__h9924 ;
  assign mem_10_rWrPtr$EN = EN_put ;

  // register mem_11_rCache
  assign mem_11_rCache$D_IN = { 1'd1, mem_11_rWrPtr, x3__h10760 } ;
  assign mem_11_rCache$EN = EN_put ;

  // register mem_11_rRdPtr
  assign mem_11_rRdPtr$D_IN = x__h10930 ;
  assign mem_11_rRdPtr$EN = EN_get ;

  // register mem_11_rWrPtr
  assign mem_11_rWrPtr$D_IN = x__h10841 ;
  assign mem_11_rWrPtr$EN = EN_put ;

  // register mem_12_rCache
  assign mem_12_rCache$D_IN = { 1'd1, mem_12_rWrPtr, x3__h11677 } ;
  assign mem_12_rCache$EN = EN_put ;

  // register mem_12_rRdPtr
  assign mem_12_rRdPtr$D_IN = x__h11847 ;
  assign mem_12_rRdPtr$EN = EN_get ;

  // register mem_12_rWrPtr
  assign mem_12_rWrPtr$D_IN = x__h11758 ;
  assign mem_12_rWrPtr$EN = EN_put ;

  // register mem_13_rCache
  assign mem_13_rCache$D_IN = { 1'd1, mem_13_rWrPtr, x3__h12594 } ;
  assign mem_13_rCache$EN = EN_put ;

  // register mem_13_rRdPtr
  assign mem_13_rRdPtr$D_IN = x__h12764 ;
  assign mem_13_rRdPtr$EN = EN_get ;

  // register mem_13_rWrPtr
  assign mem_13_rWrPtr$D_IN = x__h12675 ;
  assign mem_13_rWrPtr$EN = EN_put ;

  // register mem_14_rCache
  assign mem_14_rCache$D_IN = { 1'd1, mem_14_rWrPtr, x3__h13511 } ;
  assign mem_14_rCache$EN = EN_put ;

  // register mem_14_rRdPtr
  assign mem_14_rRdPtr$D_IN = x__h13681 ;
  assign mem_14_rRdPtr$EN = EN_get ;

  // register mem_14_rWrPtr
  assign mem_14_rWrPtr$D_IN = x__h13592 ;
  assign mem_14_rWrPtr$EN = EN_put ;

  // register mem_15_rCache
  assign mem_15_rCache$D_IN = { 1'd1, mem_15_rWrPtr, x3__h14428 } ;
  assign mem_15_rCache$EN = EN_put ;

  // register mem_15_rRdPtr
  assign mem_15_rRdPtr$D_IN = x__h14598 ;
  assign mem_15_rRdPtr$EN = EN_get ;

  // register mem_15_rWrPtr
  assign mem_15_rWrPtr$D_IN = x__h14509 ;
  assign mem_15_rWrPtr$EN = EN_put ;

  // register mem_1_rCache
  assign mem_1_rCache$D_IN = { 1'd1, mem_1_rWrPtr, x3__h1590 } ;
  assign mem_1_rCache$EN = EN_put ;

  // register mem_1_rRdPtr
  assign mem_1_rRdPtr$D_IN = x__h1760 ;
  assign mem_1_rRdPtr$EN = EN_get ;

  // register mem_1_rWrPtr
  assign mem_1_rWrPtr$D_IN = x__h1671 ;
  assign mem_1_rWrPtr$EN = EN_put ;

  // register mem_2_rCache
  assign mem_2_rCache$D_IN = { 1'd1, mem_2_rWrPtr, x3__h2507 } ;
  assign mem_2_rCache$EN = EN_put ;

  // register mem_2_rRdPtr
  assign mem_2_rRdPtr$D_IN = x__h2677 ;
  assign mem_2_rRdPtr$EN = EN_get ;

  // register mem_2_rWrPtr
  assign mem_2_rWrPtr$D_IN = x__h2588 ;
  assign mem_2_rWrPtr$EN = EN_put ;

  // register mem_3_rCache
  assign mem_3_rCache$D_IN = { 1'd1, mem_3_rWrPtr, x3__h3424 } ;
  assign mem_3_rCache$EN = EN_put ;

  // register mem_3_rRdPtr
  assign mem_3_rRdPtr$D_IN = x__h3594 ;
  assign mem_3_rRdPtr$EN = EN_get ;

  // register mem_3_rWrPtr
  assign mem_3_rWrPtr$D_IN = x__h3505 ;
  assign mem_3_rWrPtr$EN = EN_put ;

  // register mem_4_rCache
  assign mem_4_rCache$D_IN = { 1'd1, mem_4_rWrPtr, x3__h4341 } ;
  assign mem_4_rCache$EN = EN_put ;

  // register mem_4_rRdPtr
  assign mem_4_rRdPtr$D_IN = x__h4511 ;
  assign mem_4_rRdPtr$EN = EN_get ;

  // register mem_4_rWrPtr
  assign mem_4_rWrPtr$D_IN = x__h4422 ;
  assign mem_4_rWrPtr$EN = EN_put ;

  // register mem_5_rCache
  assign mem_5_rCache$D_IN = { 1'd1, mem_5_rWrPtr, x3__h5258 } ;
  assign mem_5_rCache$EN = EN_put ;

  // register mem_5_rRdPtr
  assign mem_5_rRdPtr$D_IN = x__h5428 ;
  assign mem_5_rRdPtr$EN = EN_get ;

  // register mem_5_rWrPtr
  assign mem_5_rWrPtr$D_IN = x__h5339 ;
  assign mem_5_rWrPtr$EN = EN_put ;

  // register mem_6_rCache
  assign mem_6_rCache$D_IN = { 1'd1, mem_6_rWrPtr, x3__h6175 } ;
  assign mem_6_rCache$EN = EN_put ;

  // register mem_6_rRdPtr
  assign mem_6_rRdPtr$D_IN = x__h6345 ;
  assign mem_6_rRdPtr$EN = EN_get ;

  // register mem_6_rWrPtr
  assign mem_6_rWrPtr$D_IN = x__h6256 ;
  assign mem_6_rWrPtr$EN = EN_put ;

  // register mem_7_rCache
  assign mem_7_rCache$D_IN = { 1'd1, mem_7_rWrPtr, x3__h7092 } ;
  assign mem_7_rCache$EN = EN_put ;

  // register mem_7_rRdPtr
  assign mem_7_rRdPtr$D_IN = x__h7262 ;
  assign mem_7_rRdPtr$EN = EN_get ;

  // register mem_7_rWrPtr
  assign mem_7_rWrPtr$D_IN = x__h7173 ;
  assign mem_7_rWrPtr$EN = EN_put ;

  // register mem_8_rCache
  assign mem_8_rCache$D_IN = { 1'd1, mem_8_rWrPtr, x3__h8009 } ;
  assign mem_8_rCache$EN = EN_put ;

  // register mem_8_rRdPtr
  assign mem_8_rRdPtr$D_IN = x__h8179 ;
  assign mem_8_rRdPtr$EN = EN_get ;

  // register mem_8_rWrPtr
  assign mem_8_rWrPtr$D_IN = x__h8090 ;
  assign mem_8_rWrPtr$EN = EN_put ;

  // register mem_9_rCache
  assign mem_9_rCache$D_IN = { 1'd1, mem_9_rWrPtr, x3__h8926 } ;
  assign mem_9_rCache$EN = EN_put ;

  // register mem_9_rRdPtr
  assign mem_9_rRdPtr$D_IN = x__h9096 ;
  assign mem_9_rRdPtr$EN = EN_get ;

  // register mem_9_rWrPtr
  assign mem_9_rWrPtr$D_IN = x__h9007 ;
  assign mem_9_rWrPtr$EN = EN_put ;

  // submodule mem_0_memory
  assign mem_0_memory$ADDRA = mem_0_rWrPtr[6:0] ;
  assign mem_0_memory$ADDRB = EN_get ? x__h843[6:0] : mem_0_rRdPtr[6:0] ;
  assign mem_0_memory$DIA = x3__h671 ;
  assign mem_0_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_0_memory$WEA = EN_put ;
  assign mem_0_memory$WEB = 1'd0 ;
  assign mem_0_memory$ENA = 1'b1 ;
  assign mem_0_memory$ENB = 1'b1 ;

  // submodule mem_10_memory
  assign mem_10_memory$ADDRA = mem_10_rWrPtr[6:0] ;
  assign mem_10_memory$ADDRB = EN_get ? x__h10013[6:0] : mem_10_rRdPtr[6:0] ;
  assign mem_10_memory$DIA = x3__h9843 ;
  assign mem_10_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_10_memory$WEA = EN_put ;
  assign mem_10_memory$WEB = 1'd0 ;
  assign mem_10_memory$ENA = 1'b1 ;
  assign mem_10_memory$ENB = 1'b1 ;

  // submodule mem_11_memory
  assign mem_11_memory$ADDRA = mem_11_rWrPtr[6:0] ;
  assign mem_11_memory$ADDRB = EN_get ? x__h10930[6:0] : mem_11_rRdPtr[6:0] ;
  assign mem_11_memory$DIA = x3__h10760 ;
  assign mem_11_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_11_memory$WEA = EN_put ;
  assign mem_11_memory$WEB = 1'd0 ;
  assign mem_11_memory$ENA = 1'b1 ;
  assign mem_11_memory$ENB = 1'b1 ;

  // submodule mem_12_memory
  assign mem_12_memory$ADDRA = mem_12_rWrPtr[6:0] ;
  assign mem_12_memory$ADDRB = EN_get ? x__h11847[6:0] : mem_12_rRdPtr[6:0] ;
  assign mem_12_memory$DIA = x3__h11677 ;
  assign mem_12_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_12_memory$WEA = EN_put ;
  assign mem_12_memory$WEB = 1'd0 ;
  assign mem_12_memory$ENA = 1'b1 ;
  assign mem_12_memory$ENB = 1'b1 ;

  // submodule mem_13_memory
  assign mem_13_memory$ADDRA = mem_13_rWrPtr[6:0] ;
  assign mem_13_memory$ADDRB = EN_get ? x__h12764[6:0] : mem_13_rRdPtr[6:0] ;
  assign mem_13_memory$DIA = x3__h12594 ;
  assign mem_13_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_13_memory$WEA = EN_put ;
  assign mem_13_memory$WEB = 1'd0 ;
  assign mem_13_memory$ENA = 1'b1 ;
  assign mem_13_memory$ENB = 1'b1 ;

  // submodule mem_14_memory
  assign mem_14_memory$ADDRA = mem_14_rWrPtr[6:0] ;
  assign mem_14_memory$ADDRB = EN_get ? x__h13681[6:0] : mem_14_rRdPtr[6:0] ;
  assign mem_14_memory$DIA = x3__h13511 ;
  assign mem_14_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_14_memory$WEA = EN_put ;
  assign mem_14_memory$WEB = 1'd0 ;
  assign mem_14_memory$ENA = 1'b1 ;
  assign mem_14_memory$ENB = 1'b1 ;

  // submodule mem_15_memory
  assign mem_15_memory$ADDRA = mem_15_rWrPtr[6:0] ;
  assign mem_15_memory$ADDRB = EN_get ? x__h14598[6:0] : mem_15_rRdPtr[6:0] ;
  assign mem_15_memory$DIA = x3__h14428 ;
  assign mem_15_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_15_memory$WEA = EN_put ;
  assign mem_15_memory$WEB = 1'd0 ;
  assign mem_15_memory$ENA = 1'b1 ;
  assign mem_15_memory$ENB = 1'b1 ;

  // submodule mem_1_memory
  assign mem_1_memory$ADDRA = mem_1_rWrPtr[6:0] ;
  assign mem_1_memory$ADDRB = EN_get ? x__h1760[6:0] : mem_1_rRdPtr[6:0] ;
  assign mem_1_memory$DIA = x3__h1590 ;
  assign mem_1_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_1_memory$WEA = EN_put ;
  assign mem_1_memory$WEB = 1'd0 ;
  assign mem_1_memory$ENA = 1'b1 ;
  assign mem_1_memory$ENB = 1'b1 ;

  // submodule mem_2_memory
  assign mem_2_memory$ADDRA = mem_2_rWrPtr[6:0] ;
  assign mem_2_memory$ADDRB = EN_get ? x__h2677[6:0] : mem_2_rRdPtr[6:0] ;
  assign mem_2_memory$DIA = x3__h2507 ;
  assign mem_2_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_2_memory$WEA = EN_put ;
  assign mem_2_memory$WEB = 1'd0 ;
  assign mem_2_memory$ENA = 1'b1 ;
  assign mem_2_memory$ENB = 1'b1 ;

  // submodule mem_3_memory
  assign mem_3_memory$ADDRA = mem_3_rWrPtr[6:0] ;
  assign mem_3_memory$ADDRB = EN_get ? x__h3594[6:0] : mem_3_rRdPtr[6:0] ;
  assign mem_3_memory$DIA = x3__h3424 ;
  assign mem_3_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_3_memory$WEA = EN_put ;
  assign mem_3_memory$WEB = 1'd0 ;
  assign mem_3_memory$ENA = 1'b1 ;
  assign mem_3_memory$ENB = 1'b1 ;

  // submodule mem_4_memory
  assign mem_4_memory$ADDRA = mem_4_rWrPtr[6:0] ;
  assign mem_4_memory$ADDRB = EN_get ? x__h4511[6:0] : mem_4_rRdPtr[6:0] ;
  assign mem_4_memory$DIA = x3__h4341 ;
  assign mem_4_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_4_memory$WEA = EN_put ;
  assign mem_4_memory$WEB = 1'd0 ;
  assign mem_4_memory$ENA = 1'b1 ;
  assign mem_4_memory$ENB = 1'b1 ;

  // submodule mem_5_memory
  assign mem_5_memory$ADDRA = mem_5_rWrPtr[6:0] ;
  assign mem_5_memory$ADDRB = EN_get ? x__h5428[6:0] : mem_5_rRdPtr[6:0] ;
  assign mem_5_memory$DIA = x3__h5258 ;
  assign mem_5_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_5_memory$WEA = EN_put ;
  assign mem_5_memory$WEB = 1'd0 ;
  assign mem_5_memory$ENA = 1'b1 ;
  assign mem_5_memory$ENB = 1'b1 ;

  // submodule mem_6_memory
  assign mem_6_memory$ADDRA = mem_6_rWrPtr[6:0] ;
  assign mem_6_memory$ADDRB = EN_get ? x__h6345[6:0] : mem_6_rRdPtr[6:0] ;
  assign mem_6_memory$DIA = x3__h6175 ;
  assign mem_6_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_6_memory$WEA = EN_put ;
  assign mem_6_memory$WEB = 1'd0 ;
  assign mem_6_memory$ENA = 1'b1 ;
  assign mem_6_memory$ENB = 1'b1 ;

  // submodule mem_7_memory
  assign mem_7_memory$ADDRA = mem_7_rWrPtr[6:0] ;
  assign mem_7_memory$ADDRB = EN_get ? x__h7262[6:0] : mem_7_rRdPtr[6:0] ;
  assign mem_7_memory$DIA = x3__h7092 ;
  assign mem_7_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_7_memory$WEA = EN_put ;
  assign mem_7_memory$WEB = 1'd0 ;
  assign mem_7_memory$ENA = 1'b1 ;
  assign mem_7_memory$ENB = 1'b1 ;

  // submodule mem_8_memory
  assign mem_8_memory$ADDRA = mem_8_rWrPtr[6:0] ;
  assign mem_8_memory$ADDRB = EN_get ? x__h8179[6:0] : mem_8_rRdPtr[6:0] ;
  assign mem_8_memory$DIA = x3__h8009 ;
  assign mem_8_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_8_memory$WEA = EN_put ;
  assign mem_8_memory$WEB = 1'd0 ;
  assign mem_8_memory$ENA = 1'b1 ;
  assign mem_8_memory$ENB = 1'b1 ;

  // submodule mem_9_memory
  assign mem_9_memory$ADDRA = mem_9_rWrPtr[6:0] ;
  assign mem_9_memory$ADDRB = EN_get ? x__h9096[6:0] : mem_9_rRdPtr[6:0] ;
  assign mem_9_memory$DIA = x3__h8926 ;
  assign mem_9_memory$DIB = 8'b10101010 /* unspecified value */  ;
  assign mem_9_memory$WEA = EN_put ;
  assign mem_9_memory$WEB = 1'd0 ;
  assign mem_9_memory$ENA = 1'b1 ;
  assign mem_9_memory$ENB = 1'b1 ;

  // remaining internal signals
  assign NOT_mem_10_rRdPtr_read__17_EQ_mem_10_rWrPtr_re_ETC___d650 =
	     mem_10_rRdPtr != mem_10_rWrPtr &&
	     mem_11_rRdPtr != mem_11_rWrPtr &&
	     NOT_mem_12_rRdPtr_read__77_EQ_mem_12_rWrPtr_re_ETC___d648 ;
  assign NOT_mem_10_rRdPtr_read__17_PLUS_64_27_EQ_mem_1_ETC___d549 =
	     mem_10_rRdPtr + 8'd64 != mem_10_rWrPtr &&
	     mem_11_rRdPtr + 8'd64 != mem_11_rWrPtr &&
	     NOT_mem_12_rRdPtr_read__77_PLUS_64_33_EQ_mem_1_ETC___d547 ;
  assign NOT_mem_12_rRdPtr_read__77_EQ_mem_12_rWrPtr_re_ETC___d648 =
	     mem_12_rRdPtr != mem_12_rWrPtr &&
	     mem_13_rRdPtr != mem_13_rWrPtr &&
	     mem_14_rRdPtr != mem_14_rWrPtr &&
	     mem_15_rRdPtr != mem_15_rWrPtr ;
  assign NOT_mem_12_rRdPtr_read__77_PLUS_64_33_EQ_mem_1_ETC___d547 =
	     mem_12_rRdPtr + 8'd64 != mem_12_rWrPtr &&
	     mem_13_rRdPtr + 8'd64 != mem_13_rWrPtr &&
	     NOT_mem_14_rRdPtr_read__37_PLUS_64_39_EQ_mem_1_ETC___d545 ;
  assign NOT_mem_14_rRdPtr_read__37_PLUS_64_39_EQ_mem_1_ETC___d545 =
	     mem_14_rRdPtr + 8'd64 != mem_14_rWrPtr &&
	     mem_15_rRdPtr + 8'd64 != mem_15_rWrPtr ;
  assign NOT_mem_2_rRdPtr_read__7_EQ_mem_2_rWrPtr_read__ETC___d658 =
	     mem_2_rRdPtr != mem_2_rWrPtr && mem_3_rRdPtr != mem_3_rWrPtr &&
	     NOT_mem_4_rRdPtr_read__37_EQ_mem_4_rWrPtr_read_ETC___d656 ;
  assign NOT_mem_2_rRdPtr_read__7_PLUS_64_03_EQ_mem_2_r_ETC___d557 =
	     mem_2_rRdPtr + 8'd64 != mem_2_rWrPtr &&
	     mem_3_rRdPtr + 8'd64 != mem_3_rWrPtr &&
	     NOT_mem_4_rRdPtr_read__37_PLUS_64_09_EQ_mem_4__ETC___d555 ;
  assign NOT_mem_4_rRdPtr_read__37_EQ_mem_4_rWrPtr_read_ETC___d656 =
	     mem_4_rRdPtr != mem_4_rWrPtr && mem_5_rRdPtr != mem_5_rWrPtr &&
	     NOT_mem_6_rRdPtr_read__97_EQ_mem_6_rWrPtr_read_ETC___d654 ;
  assign NOT_mem_4_rRdPtr_read__37_PLUS_64_09_EQ_mem_4__ETC___d555 =
	     mem_4_rRdPtr + 8'd64 != mem_4_rWrPtr &&
	     mem_5_rRdPtr + 8'd64 != mem_5_rWrPtr &&
	     NOT_mem_6_rRdPtr_read__97_PLUS_64_15_EQ_mem_6__ETC___d553 ;
  assign NOT_mem_6_rRdPtr_read__97_EQ_mem_6_rWrPtr_read_ETC___d654 =
	     mem_6_rRdPtr != mem_6_rWrPtr && mem_7_rRdPtr != mem_7_rWrPtr &&
	     NOT_mem_8_rRdPtr_read__57_EQ_mem_8_rWrPtr_read_ETC___d652 ;
  assign NOT_mem_6_rRdPtr_read__97_PLUS_64_15_EQ_mem_6__ETC___d553 =
	     mem_6_rRdPtr + 8'd64 != mem_6_rWrPtr &&
	     mem_7_rRdPtr + 8'd64 != mem_7_rWrPtr &&
	     NOT_mem_8_rRdPtr_read__57_PLUS_64_21_EQ_mem_8__ETC___d551 ;
  assign NOT_mem_8_rRdPtr_read__57_EQ_mem_8_rWrPtr_read_ETC___d652 =
	     mem_8_rRdPtr != mem_8_rWrPtr && mem_9_rRdPtr != mem_9_rWrPtr &&
	     NOT_mem_10_rRdPtr_read__17_EQ_mem_10_rWrPtr_re_ETC___d650 ;
  assign NOT_mem_8_rRdPtr_read__57_PLUS_64_21_EQ_mem_8__ETC___d551 =
	     mem_8_rRdPtr + 8'd64 != mem_8_rWrPtr &&
	     mem_9_rRdPtr + 8'd64 != mem_9_rWrPtr &&
	     NOT_mem_10_rRdPtr_read__17_PLUS_64_27_EQ_mem_1_ETC___d549 ;
  assign x3__h10760 = EN_put ? put_datas[95:88] : 8'd0 ;
  assign x3__h11677 = EN_put ? put_datas[103:96] : 8'd0 ;
  assign x3__h12594 = EN_put ? put_datas[111:104] : 8'd0 ;
  assign x3__h13511 = EN_put ? put_datas[119:112] : 8'd0 ;
  assign x3__h14428 = EN_put ? put_datas[127:120] : 8'd0 ;
  assign x3__h1590 = EN_put ? put_datas[15:8] : 8'd0 ;
  assign x3__h2507 = EN_put ? put_datas[23:16] : 8'd0 ;
  assign x3__h3424 = EN_put ? put_datas[31:24] : 8'd0 ;
  assign x3__h4341 = EN_put ? put_datas[39:32] : 8'd0 ;
  assign x3__h5258 = EN_put ? put_datas[47:40] : 8'd0 ;
  assign x3__h6175 = EN_put ? put_datas[55:48] : 8'd0 ;
  assign x3__h671 = EN_put ? put_datas[7:0] : 8'd0 ;
  assign x3__h7092 = EN_put ? put_datas[63:56] : 8'd0 ;
  assign x3__h8009 = EN_put ? put_datas[71:64] : 8'd0 ;
  assign x3__h8926 = EN_put ? put_datas[79:72] : 8'd0 ;
  assign x3__h9843 = EN_put ? put_datas[87:80] : 8'd0 ;
  assign x__h10013 = mem_10_rRdPtr + 8'd1 ;
  assign x__h10841 = mem_11_rWrPtr + 8'd1 ;
  assign x__h10930 = mem_11_rRdPtr + 8'd1 ;
  assign x__h11758 = mem_12_rWrPtr + 8'd1 ;
  assign x__h11847 = mem_12_rRdPtr + 8'd1 ;
  assign x__h12675 = mem_13_rWrPtr + 8'd1 ;
  assign x__h12764 = mem_13_rRdPtr + 8'd1 ;
  assign x__h13592 = mem_14_rWrPtr + 8'd1 ;
  assign x__h13681 = mem_14_rRdPtr + 8'd1 ;
  assign x__h14509 = mem_15_rWrPtr + 8'd1 ;
  assign x__h14598 = mem_15_rRdPtr + 8'd1 ;
  assign x__h1671 = mem_1_rWrPtr + 8'd1 ;
  assign x__h1760 = mem_1_rRdPtr + 8'd1 ;
  assign x__h2588 = mem_2_rWrPtr + 8'd1 ;
  assign x__h2677 = mem_2_rRdPtr + 8'd1 ;
  assign x__h3505 = mem_3_rWrPtr + 8'd1 ;
  assign x__h3594 = mem_3_rRdPtr + 8'd1 ;
  assign x__h4422 = mem_4_rWrPtr + 8'd1 ;
  assign x__h4511 = mem_4_rRdPtr + 8'd1 ;
  assign x__h5339 = mem_5_rWrPtr + 8'd1 ;
  assign x__h5428 = mem_5_rRdPtr + 8'd1 ;
  assign x__h6256 = mem_6_rWrPtr + 8'd1 ;
  assign x__h6345 = mem_6_rRdPtr + 8'd1 ;
  assign x__h7173 = mem_7_rWrPtr + 8'd1 ;
  assign x__h7262 = mem_7_rRdPtr + 8'd1 ;
  assign x__h754 = mem_0_rWrPtr + 8'd1 ;
  assign x__h8090 = mem_8_rWrPtr + 8'd1 ;
  assign x__h8179 = mem_8_rRdPtr + 8'd1 ;
  assign x__h843 = mem_0_rRdPtr + 8'd1 ;
  assign x__h9007 = mem_9_rWrPtr + 8'd1 ;
  assign x__h9096 = mem_9_rRdPtr + 8'd1 ;
  assign x__h9924 = mem_10_rWrPtr + 8'd1 ;
  assign x_wget__h10647 =
	     (mem_11_rCache[16] && mem_11_rCache[15:8] == mem_11_rRdPtr) ?
	       mem_11_rCache[7:0] :
	       mem_11_memory$DOB ;
  assign x_wget__h11564 =
	     (mem_12_rCache[16] && mem_12_rCache[15:8] == mem_12_rRdPtr) ?
	       mem_12_rCache[7:0] :
	       mem_12_memory$DOB ;
  assign x_wget__h12481 =
	     (mem_13_rCache[16] && mem_13_rCache[15:8] == mem_13_rRdPtr) ?
	       mem_13_rCache[7:0] :
	       mem_13_memory$DOB ;
  assign x_wget__h13398 =
	     (mem_14_rCache[16] && mem_14_rCache[15:8] == mem_14_rRdPtr) ?
	       mem_14_rCache[7:0] :
	       mem_14_memory$DOB ;
  assign x_wget__h14315 =
	     (mem_15_rCache[16] && mem_15_rCache[15:8] == mem_15_rRdPtr) ?
	       mem_15_rCache[7:0] :
	       mem_15_memory$DOB ;
  assign x_wget__h1477 =
	     (mem_1_rCache[16] && mem_1_rCache[15:8] == mem_1_rRdPtr) ?
	       mem_1_rCache[7:0] :
	       mem_1_memory$DOB ;
  assign x_wget__h2394 =
	     (mem_2_rCache[16] && mem_2_rCache[15:8] == mem_2_rRdPtr) ?
	       mem_2_rCache[7:0] :
	       mem_2_memory$DOB ;
  assign x_wget__h3311 =
	     (mem_3_rCache[16] && mem_3_rCache[15:8] == mem_3_rRdPtr) ?
	       mem_3_rCache[7:0] :
	       mem_3_memory$DOB ;
  assign x_wget__h4228 =
	     (mem_4_rCache[16] && mem_4_rCache[15:8] == mem_4_rRdPtr) ?
	       mem_4_rCache[7:0] :
	       mem_4_memory$DOB ;
  assign x_wget__h5145 =
	     (mem_5_rCache[16] && mem_5_rCache[15:8] == mem_5_rRdPtr) ?
	       mem_5_rCache[7:0] :
	       mem_5_memory$DOB ;
  assign x_wget__h554 =
	     (mem_0_rCache[16] && mem_0_rCache[15:8] == mem_0_rRdPtr) ?
	       mem_0_rCache[7:0] :
	       mem_0_memory$DOB ;
  assign x_wget__h6062 =
	     (mem_6_rCache[16] && mem_6_rCache[15:8] == mem_6_rRdPtr) ?
	       mem_6_rCache[7:0] :
	       mem_6_memory$DOB ;
  assign x_wget__h6979 =
	     (mem_7_rCache[16] && mem_7_rCache[15:8] == mem_7_rRdPtr) ?
	       mem_7_rCache[7:0] :
	       mem_7_memory$DOB ;
  assign x_wget__h7896 =
	     (mem_8_rCache[16] && mem_8_rCache[15:8] == mem_8_rRdPtr) ?
	       mem_8_rCache[7:0] :
	       mem_8_memory$DOB ;
  assign x_wget__h8813 =
	     (mem_9_rCache[16] && mem_9_rCache[15:8] == mem_9_rRdPtr) ?
	       mem_9_rCache[7:0] :
	       mem_9_memory$DOB ;
  assign x_wget__h9730 =
	     (mem_10_rCache[16] && mem_10_rCache[15:8] == mem_10_rRdPtr) ?
	       mem_10_rCache[7:0] :
	       mem_10_memory$DOB ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        mem_0_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_0_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_0_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_10_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_10_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_10_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_11_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_11_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_11_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_12_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_12_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_12_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_13_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_13_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_13_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_14_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_14_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_14_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_15_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_15_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_15_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_1_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_1_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_1_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_2_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_3_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_3_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_3_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_4_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_4_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_4_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_5_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_5_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_5_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_6_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_6_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_6_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_7_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_7_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_7_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_8_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_8_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_8_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_9_rCache <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	mem_9_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem_9_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
      end
    else
      begin
        if (mem_0_rCache$EN)
	  mem_0_rCache <= `BSV_ASSIGNMENT_DELAY mem_0_rCache$D_IN;
	if (mem_0_rRdPtr$EN)
	  mem_0_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_0_rRdPtr$D_IN;
	if (mem_0_rWrPtr$EN)
	  mem_0_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_0_rWrPtr$D_IN;
	if (mem_10_rCache$EN)
	  mem_10_rCache <= `BSV_ASSIGNMENT_DELAY mem_10_rCache$D_IN;
	if (mem_10_rRdPtr$EN)
	  mem_10_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_10_rRdPtr$D_IN;
	if (mem_10_rWrPtr$EN)
	  mem_10_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_10_rWrPtr$D_IN;
	if (mem_11_rCache$EN)
	  mem_11_rCache <= `BSV_ASSIGNMENT_DELAY mem_11_rCache$D_IN;
	if (mem_11_rRdPtr$EN)
	  mem_11_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_11_rRdPtr$D_IN;
	if (mem_11_rWrPtr$EN)
	  mem_11_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_11_rWrPtr$D_IN;
	if (mem_12_rCache$EN)
	  mem_12_rCache <= `BSV_ASSIGNMENT_DELAY mem_12_rCache$D_IN;
	if (mem_12_rRdPtr$EN)
	  mem_12_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_12_rRdPtr$D_IN;
	if (mem_12_rWrPtr$EN)
	  mem_12_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_12_rWrPtr$D_IN;
	if (mem_13_rCache$EN)
	  mem_13_rCache <= `BSV_ASSIGNMENT_DELAY mem_13_rCache$D_IN;
	if (mem_13_rRdPtr$EN)
	  mem_13_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_13_rRdPtr$D_IN;
	if (mem_13_rWrPtr$EN)
	  mem_13_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_13_rWrPtr$D_IN;
	if (mem_14_rCache$EN)
	  mem_14_rCache <= `BSV_ASSIGNMENT_DELAY mem_14_rCache$D_IN;
	if (mem_14_rRdPtr$EN)
	  mem_14_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_14_rRdPtr$D_IN;
	if (mem_14_rWrPtr$EN)
	  mem_14_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_14_rWrPtr$D_IN;
	if (mem_15_rCache$EN)
	  mem_15_rCache <= `BSV_ASSIGNMENT_DELAY mem_15_rCache$D_IN;
	if (mem_15_rRdPtr$EN)
	  mem_15_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_15_rRdPtr$D_IN;
	if (mem_15_rWrPtr$EN)
	  mem_15_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_15_rWrPtr$D_IN;
	if (mem_1_rCache$EN)
	  mem_1_rCache <= `BSV_ASSIGNMENT_DELAY mem_1_rCache$D_IN;
	if (mem_1_rRdPtr$EN)
	  mem_1_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_1_rRdPtr$D_IN;
	if (mem_1_rWrPtr$EN)
	  mem_1_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_1_rWrPtr$D_IN;
	if (mem_2_rCache$EN)
	  mem_2_rCache <= `BSV_ASSIGNMENT_DELAY mem_2_rCache$D_IN;
	if (mem_2_rRdPtr$EN)
	  mem_2_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_2_rRdPtr$D_IN;
	if (mem_2_rWrPtr$EN)
	  mem_2_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_2_rWrPtr$D_IN;
	if (mem_3_rCache$EN)
	  mem_3_rCache <= `BSV_ASSIGNMENT_DELAY mem_3_rCache$D_IN;
	if (mem_3_rRdPtr$EN)
	  mem_3_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_3_rRdPtr$D_IN;
	if (mem_3_rWrPtr$EN)
	  mem_3_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_3_rWrPtr$D_IN;
	if (mem_4_rCache$EN)
	  mem_4_rCache <= `BSV_ASSIGNMENT_DELAY mem_4_rCache$D_IN;
	if (mem_4_rRdPtr$EN)
	  mem_4_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_4_rRdPtr$D_IN;
	if (mem_4_rWrPtr$EN)
	  mem_4_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_4_rWrPtr$D_IN;
	if (mem_5_rCache$EN)
	  mem_5_rCache <= `BSV_ASSIGNMENT_DELAY mem_5_rCache$D_IN;
	if (mem_5_rRdPtr$EN)
	  mem_5_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_5_rRdPtr$D_IN;
	if (mem_5_rWrPtr$EN)
	  mem_5_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_5_rWrPtr$D_IN;
	if (mem_6_rCache$EN)
	  mem_6_rCache <= `BSV_ASSIGNMENT_DELAY mem_6_rCache$D_IN;
	if (mem_6_rRdPtr$EN)
	  mem_6_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_6_rRdPtr$D_IN;
	if (mem_6_rWrPtr$EN)
	  mem_6_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_6_rWrPtr$D_IN;
	if (mem_7_rCache$EN)
	  mem_7_rCache <= `BSV_ASSIGNMENT_DELAY mem_7_rCache$D_IN;
	if (mem_7_rRdPtr$EN)
	  mem_7_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_7_rRdPtr$D_IN;
	if (mem_7_rWrPtr$EN)
	  mem_7_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_7_rWrPtr$D_IN;
	if (mem_8_rCache$EN)
	  mem_8_rCache <= `BSV_ASSIGNMENT_DELAY mem_8_rCache$D_IN;
	if (mem_8_rRdPtr$EN)
	  mem_8_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_8_rRdPtr$D_IN;
	if (mem_8_rWrPtr$EN)
	  mem_8_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_8_rWrPtr$D_IN;
	if (mem_9_rCache$EN)
	  mem_9_rCache <= `BSV_ASSIGNMENT_DELAY mem_9_rCache$D_IN;
	if (mem_9_rRdPtr$EN)
	  mem_9_rRdPtr <= `BSV_ASSIGNMENT_DELAY mem_9_rRdPtr$D_IN;
	if (mem_9_rWrPtr$EN)
	  mem_9_rWrPtr <= `BSV_ASSIGNMENT_DELAY mem_9_rWrPtr$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    mem_0_rCache = 17'h0AAAA;
    mem_0_rRdPtr = 8'hAA;
    mem_0_rWrPtr = 8'hAA;
    mem_10_rCache = 17'h0AAAA;
    mem_10_rRdPtr = 8'hAA;
    mem_10_rWrPtr = 8'hAA;
    mem_11_rCache = 17'h0AAAA;
    mem_11_rRdPtr = 8'hAA;
    mem_11_rWrPtr = 8'hAA;
    mem_12_rCache = 17'h0AAAA;
    mem_12_rRdPtr = 8'hAA;
    mem_12_rWrPtr = 8'hAA;
    mem_13_rCache = 17'h0AAAA;
    mem_13_rRdPtr = 8'hAA;
    mem_13_rWrPtr = 8'hAA;
    mem_14_rCache = 17'h0AAAA;
    mem_14_rRdPtr = 8'hAA;
    mem_14_rWrPtr = 8'hAA;
    mem_15_rCache = 17'h0AAAA;
    mem_15_rRdPtr = 8'hAA;
    mem_15_rWrPtr = 8'hAA;
    mem_1_rCache = 17'h0AAAA;
    mem_1_rRdPtr = 8'hAA;
    mem_1_rWrPtr = 8'hAA;
    mem_2_rCache = 17'h0AAAA;
    mem_2_rRdPtr = 8'hAA;
    mem_2_rWrPtr = 8'hAA;
    mem_3_rCache = 17'h0AAAA;
    mem_3_rRdPtr = 8'hAA;
    mem_3_rWrPtr = 8'hAA;
    mem_4_rCache = 17'h0AAAA;
    mem_4_rRdPtr = 8'hAA;
    mem_4_rWrPtr = 8'hAA;
    mem_5_rCache = 17'h0AAAA;
    mem_5_rRdPtr = 8'hAA;
    mem_5_rWrPtr = 8'hAA;
    mem_6_rCache = 17'h0AAAA;
    mem_6_rRdPtr = 8'hAA;
    mem_6_rWrPtr = 8'hAA;
    mem_7_rCache = 17'h0AAAA;
    mem_7_rRdPtr = 8'hAA;
    mem_7_rWrPtr = 8'hAA;
    mem_8_rCache = 17'h0AAAA;
    mem_8_rRdPtr = 8'hAA;
    mem_8_rWrPtr = 8'hAA;
    mem_9_rCache = 17'h0AAAA;
    mem_9_rRdPtr = 8'hAA;
    mem_9_rWrPtr = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkMem2

